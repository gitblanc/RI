package uo.ri.cws.application.service.mechanic.crud.command;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

import uo.ri.cws.application.service.BusinessException;
import uo.ri.cws.application.service.mechanic.MechanicCrudService.MechanicDto;
import uo.ri.cws.application.util.BusinessChecks;
import uo.ri.cws.application.util.DtoAssembler;
import uo.ri.cws.application.util.command.Command;
import uo.ri.cws.domain.Mechanic;
import uo.ri.cws.infrastructure.persistence.jpa.util.Jpa;

public class FindAllMechanics implements Command<List<MechanicDto>>{

	public List<MechanicDto> execute() throws BusinessException {
		List<MechanicDto> result = null;
		EntityManager em = Jpa.getManager();
		// Comprobar que no hay un mecanico con el mismo dni
		TypedQuery<Mechanic> tq = em.createNamedQuery("Mechanic.findAll", Mechanic.class);
		// Obtenemos los resultados NO USAR getSingleResult()
		List<Mechanic> mechanics = tq.getResultList();

		BusinessChecks.isTrue(mechanics.isEmpty(), "There can't be two mechanics with same dni");

		result = DtoAssembler.toMechanicDtoList(mechanics);

		return result;
	}

}
