/**
 * 
 */
package uo.ri.cws.application.business.mechanic.crud;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import jdbc.Jdbc;
import uo.ri.cws.application.business.mechanic.MechanicService.MechanicBLDto;
import uo.ri.cws.application.business.mechanic.assembler.MechanicAssembler;
import uo.ri.cws.application.persistence.PersistenceException;
import uo.ri.cws.application.persistence.PersistenceFactory;
import uo.ri.cws.application.persistence.mechanic.MechanicGateway;

/**
 * @author UO285176
 *
 */
public class FindAllMechanics {

	public List<MechanicBLDto> execute() {
		List<MechanicBLDto> mechanics = new ArrayList<>();
		Connection c = null;
		try {
			c = Jdbc.createThreadConnection();
			c.setAutoCommit(false);

			MechanicGateway mg = PersistenceFactory.forMechanic();

			mechanics = MechanicAssembler.toDtoList(mg.findAll());// no hay nada que comprobar en un findall

			c.commit();

		} catch (SQLException e) {
			try {
				c.rollback();
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			throw new PersistenceException(e);
		} finally {
			if (c != null)
				try {
					c.close();
				} catch (SQLException e) {
					/* ignore */ }
		} // Aquí SE CIERRAN LAS CONEXIONES

		return mechanics;
	}
}
