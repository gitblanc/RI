/**
 * 
 */
package uo.ri.cws.application.business.mechanic.crud;

import assertion.Argument;
import uo.ri.cws.application.business.BusinessException;
import uo.ri.cws.application.business.mechanic.MechanicService.MechanicBLDto;
import uo.ri.cws.application.business.util.command.Command;
import uo.ri.cws.application.persistence.PersistenceException;
import uo.ri.cws.application.persistence.PersistenceFactory;
import uo.ri.cws.application.persistence.mechanic.MechanicGateway;

/**
 * @author UO285176
 *
 */
public class UpdateMechanic implements Command<MechanicBLDto> {
	
	private MechanicBLDto mechanic = null;

	public UpdateMechanic(MechanicBLDto mechanic) {
		Argument.isNotNull(mechanic, "There can't be a null mechanic");
		Argument.isNotEmpty(mechanic.id, "There can't be an empty mechanic");
		Argument.isNotEmpty(mechanic.dni, "There can't be an empty mechanic");
		Argument.isNotEmpty(mechanic.name, "There can't be an empty mechanic");
		Argument.isNotEmpty(mechanic.surname, "There can't be an empty mechanic");
		this.mechanic = mechanic;
	}

	@Override
	public MechanicBLDto execute() throws BusinessException {
		MechanicGateway mg = PersistenceFactory.forMechanic();
		
	}

}
